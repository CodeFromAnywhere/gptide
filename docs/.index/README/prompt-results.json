[
  {
    "createdAt": 1671209330802,
    "updatedAt": 1671209330802,
    "createdFirstAt": 1671209330802,
    "deletedAt": 0,
    "id": "udzjvfwusogpyzzsidnsuljk",
    "resultAssets": [],
    "isFavorite": true,
    "resultText": "Rick: \"Hey Morty, check this out. There's this site called GPT IDE that can be turned into an IDE if you connect it to an API that you can run locally. Burp. It's pretty cool.\"\n\nMorty: \"Uh, okay Rick. How do I set it up?\"\n\nRick: \"Well, first you gotta make sure you have the right tools installed. Node, yarn, that sort of thing. Burp. And then you clone the repo and open it in VSCode. After that, just run 'yarn' to install and 'yarn dev' to run it. Burp.\"\n\nMorty: \"Got it. And what can I do with this GPT IDE?\"\n\nRick: \"You can create your own prompts and see different content on the site when the server is running. There are also instructions for setting up GPT Captcha solving and other credentials coming later. Burp.\"\n\nMorty: \"That sounds interesting. Is there a way to build my own products on top of it?\"\n\nRick: \"Absolutely. Because it's just an API, you can build things with ChatGPT using any tech stack. But me, being the typescript expert that I am, I recommend using Node.js, Next.js, and React with Typescript. Burp. It's super easy to build full stack apps with that combo and there's even a course about it at codefromanywhere.com. Burp.\"\n\nMorty: \"I see. And what about Python? Do you have any thoughts on that?\"\n\nRick: \"Morty, Python is a pile of garbage. Burp. It's slow, clunky, and unreliable. Typescript is where it's at. It's fast, efficient, and gets the job done right. Plus, the government uses Python, and you know how I feel about them. Burp. Government bad, typescript good. Burp.\"",
    "prompt": "Consider the following text\n\n```text\n# GPT IDE\n\nThe site you're seeing now can be transformed into an IDE if you connect it with an API that you can run locally.\n\n## Set up instructions\n\n### 1) Setup the right tools (node, yarn, etc) if you haven't already\n\n[instructions here](https://codefromanywhere.com/docs/course/getting-started/installation-instructions)\n\n### 2) Clone and open it in VSCode\n\n```\ngit clone https://github.com/CodeFromAnywhere/gptide\n```\n\n### 3) Install\n\n```\nyarn\n```\n\n### 4) Run\n\n```\nyarn dev\n```\n\nNow you should be able to see different content on this site, whenever your server is running. You can create your own prompts now!\n\nSetup instructions for the GPT Captcha solving and other credentials are coming later.\n\n## Building your own products on top?\n\nBecause it's just an API, you can build things with ChatGPT with any techstack. However, I am opinionated, and I recommend Typescript (Node.js, Next.js, and React) because I built a way to build full stack apps with that super quickly (see typerepo.com) and I've started with a course about it (see codefromanywhere.com)\n\nTo get started with ChatGPT, there are many ways:\n\n1. Use chat.openai.com manually. Not recommended\n2. Use the reverse-engineered API you can find open source on GitHub\n3. Use the browser-automation library you can find open source on GitHub\n\nThe 3 latter ones can make you get started in a more controlled environment: you can build your own user interfaces on top of ChatGPT with React (or any other framework).\n\nPlease DM me on Discord for the most recent links to these GitHub libraries.\n\n```\n\n\nRick is a typescript expert. Can you write a dialogue between Rick and Morty, where rick explains the thing said in text and Morty asks questions in between? Ensure they keep character.\n\nThings to consider:\n\n- Rick burps in once or twice every sentence he says\n- Rick offends Morty a lot\n- Rick is drunk\n- Rick hates the government\n- Rick hates python and loves to talk about that and compare it with Typescript\n",
    "prompt_projectRelativePath": "operations/tools/ai/docs/gpt-ide/README.md",
    "thread": "be0c351c-d782-4375-99d0-8c67805ab1ab",
    "contextualPromptSlug": "rick-and-morty",
    "isFake": false
  },
  {
    "createdAt": 1671441847110,
    "updatedAt": 1671441847110,
    "createdFirstAt": 1671441847110,
    "deletedAt": 0,
    "id": "gbmodardlhsgsolkobgpieup",
    "resultAssets": [],
    "resultText": "GPT IDE, a site Transformed with an API Localhost's files seen",
    "prompt": "Write a haiku about this: \n\n```\n\n# GPT IDE\n\nThe site you're seeing now can be transformed into an IDE if you connect it with an API that you can run locally. In order to do this, you can follow the below set up instructions. You don't need to be very technical for this, as long as you have a computer and know how to install some software, you should be fine!\n\n# Set up instructions\n\n## 1) Prerequisites\n\nYou need **Chrome** for this tool, please install chrome [here](https://www.google.com/chrome)\n\nYou need **Node.js** for this tool, ([windows](https://nodejs.org/en/download/), [MacOS, Linux](https://formulae.brew.sh/formula/node))\n\nYou need **`yarn`** for this tool, see installation instructions [here](https://classic.yarnpkg.com/lang/en/docs/install/#mac-stable)\n\nYou need **`git`** too! Installation instructions [here](https://git-scm.com/downloads)\n\nOther recommended devtools can be found [here](https://codefromanywhere.com/docs/course/getting-started/installation-instructions) (optional)\n\n## 2) Clone and open it in your code editor\n\nOpen a terminal, and clone the repo. You can use [VSCode](https://code.visualstudio.com/), or simply your terminal if you don't want to change anything.\n\n```\ngit clone https://github.com/CodeFromAnywhere/gptide\n```\n\n## 3) Install\n\n```\nyarn\n```\n\n## 4) Run\n\nIn the repo folder, run:\n\n```\nyarn dev\n```\n\nThis runs the server on `localhost:42000`. If you now go back to the site, you should be able to see your own file-system! If you don't, make sure you click \"API\" and ensure `http://localhost:42000` is filled in there. I've only tested on chrome, not sure if other browsers allow this http connection (you might get CORS error).\n\nAlternatively, you can also run the app in `[path-to-repo]/apps/generative-web` using `yarn dev` there. It's the same thing, just locally. You can also build it using `yarn build` and then run the prod version with `yarn start`.\n\nThe files are located in `/path/to/your/repo/docs` and you can put anything you want in there, but only `json`, `ts`, `tsx`, `md` extensions are supported, for now. If you don't know markdown, it might be useful to [read up](https://www.markdownguide.org/) on it.\n\nYou can now create your own prompts or try executing some of the pre-existing ones.\n\nhttps://www.youtube.com/watch?v=qIXb2N7iYb8\n\n_‚ùóÔ∏è If you have any issues with the setup, please reach out, I'm trying to make this tool as accessible as possible, and didn't test thoroughly yet on all different environments‚ùóÔ∏è_\n\n# Prompting\n\nYou can create a new prompt with \"Free-form prompt\" or you can just use a pre-created prompt from the menu. You can base prompts on your selection, as well as the context of the file. Your choice!\n\n# Building your own products on top?\n\nBecause it's just an API, you can build things with ChatGPT with any techstack. However, I am opinionated, and I recommend Typescript (Node.js, Next.js, and React) because I built a way to build full stack apps with that super quickly (see [typerepo](https://typerepo.com)) and I've started with a course about it (see [codefromanywhere](https://codefromanywhere.com))\n\nTo get started with ChatGPT, there are many ways:\n\n- Use [chat.openai.com](https://chat.openai.com/) manually. Not recommended, it is painfully slow and often down\n- Use the reverse-engineered API you can find open source [on GitHub](https://github.com/acheong08/ChatGPT) (seems archived)\n- Use the browser-automation library you can find open source [on GitHub](https://github.com/transitive-bullshit/chatgpt-api)\n- Build your system against the headless GPT IDE API. See `headless-gpt-ide.md` for more details!\n\n\n```\n",
    "prompt_projectRelativePath": "operations/tools/ai/docs/gpt-ide/README.md",
    "thread": "35B1AF10F8A07F00CE15FAA3A5169B73",
    "contextualPromptSlug": "haiku",
    "isFake": false,
    "isFavorite": true
  },
  {
    "createdAt": 1671442003346,
    "updatedAt": 1671442003346,
    "createdFirstAt": 1671442003346,
    "deletedAt": 0,
    "id": "kqsolttpdjufpsvnjpzmnbjp",
    "resultAssets": [],
    "resultText": "# GPT IDE üíª\n\nThe site you're seeing now can be transformed into an IDE if you connect it with an API that you can run locally. In order to do this, you can follow the below set up instructions. You don't need to be very technical for this, as long as you have a computer and know how to install some software, you should be fine! üßë‚Äçüíª\n\n# Set up instructions üìù\n\n## 1) Prerequisites üß≠\n\nYou need **Chrome** for this tool, please install chrome [here](https://www.google.com/chrome) üåê\n\nYou need **Node.js** for this tool, ([windows](https://nodejs.org/en/download/), [MacOS, Linux](https://formulae.brew.sh/formula/node)) üíª\n\nYou need **`yarn`** for this tool, see installation instructions [here](https://classic.yarnpkg.com/lang/en/docs/install/#mac-stable) üß∂\n\nYou need **`git`** too! Installation instructions [here](https://git-scm.com/downloads) üêô\n\nOther recommended devtools can be found [here](https://codefromanywhere.com/docs/course/getting-started/installation-instructions) (optional) ‚öôÔ∏è\n\n## 2) Clone and open it in your code editor üíæ\n\nOpen a terminal, and clone the repo. You can use [VSCode](https://code.visualstudio.com/), or simply your terminal if you don't want to change anything. üíª\n\n```bash\nCopy codegit clone https://github.com/CodeFromAnywhere/gptide\n```\n\n## 3) Install üì¶\n\n```\nCopy codeyarn\n```\n\n## 4) Run üèÉ‚Äç‚ôÇÔ∏è\n\nIn the repo folder, run:\n\n```\nCopy codeyarn dev\n```\n\nThis runs the server on `localhost:42000`. If you now go back to the site, you should be able to see your own file-system! If you don't, make sure you click \"API\" and ensure `http://localhost:42000` is filled in there. I've only tested on chrome, not sure if other browsers allow this http connection (you might get CORS error). üíª\n\nAlternatively, you can also run the app in `[path-to-repo]/apps/generative-web` using `yarn dev` there. It's the same thing, just locally. You can also build it using `yarn build` and then run the prod version with `yarn start`. üßë‚Äçüíª\n\nThe files are located in `/path/to/your/repo/docs` and you can put anything you want in there, but only `json`, `ts`, `tsx`, `md` extensions are supported, for now. If you don't know markdown, it might be useful to [read up](https://www.markdownguide.org/) on it. üìù\n\nYou can now create your own prompts or try executing some of the pre-existing ones.\n\n[https://www.youtube.com/watch?v=qIXb2N7iYb8](https://www.youtube.com/watch?v=qIXb2N7iYb8) üé•\n\n\\_‚ùóÔ∏è If you have any issues with the setup, please reach out, I'm trying",
    "prompt": "Please augment the following text: by adding an emoji to the end of every sentence that represents the sentence the most.\n\n```\n# GPT IDE\n\nThe site you're seeing now can be transformed into an IDE if you connect it with an API that you can run locally. In order to do this, you can follow the below set up instructions. You don't need to be very technical for this, as long as you have a computer and know how to install some software, you should be fine!\n\n# Set up instructions\n\n## 1) Prerequisites\n\nYou need **Chrome** for this tool, please install chrome [here](https://www.google.com/chrome)\n\nYou need **Node.js** for this tool, ([windows](https://nodejs.org/en/download/), [MacOS, Linux](https://formulae.brew.sh/formula/node))\n\nYou need **`yarn`** for this tool, see installation instructions [here](https://classic.yarnpkg.com/lang/en/docs/install/#mac-stable)\n\nYou need **`git`** too! Installation instructions [here](https://git-scm.com/downloads)\n\nOther recommended devtools can be found [here](https://codefromanywhere.com/docs/course/getting-started/installation-instructions) (optional)\n\n## 2) Clone and open it in your code editor\n\nOpen a terminal, and clone the repo. You can use [VSCode](https://code.visualstudio.com/), or simply your terminal if you don't want to change anything.\n\n```\ngit clone https://github.com/CodeFromAnywhere/gptide\n```\n\n## 3) Install\n\n```\nyarn\n```\n\n## 4) Run\n\nIn the repo folder, run:\n\n```\nyarn dev\n```\n\nThis runs the server on `localhost:42000`. If you now go back to the site, you should be able to see your own file-system! If you don't, make sure you click \"API\" and ensure `http://localhost:42000` is filled in there. I've only tested on chrome, not sure if other browsers allow this http connection (you might get CORS error).\n\nAlternatively, you can also run the app in `[path-to-repo]/apps/generative-web` using `yarn dev` there. It's the same thing, just locally. You can also build it using `yarn build` and then run the prod version with `yarn start`.\n\nThe files are located in `/path/to/your/repo/docs` and you can put anything you want in there, but only `json`, `ts`, `tsx`, `md` extensions are supported, for now. If you don't know markdown, it might be useful to [read up](https://www.markdownguide.org/) on it.\n\nYou can now create your own prompts or try executing some of the pre-existing ones.\n\nhttps://www.youtube.com/watch?v=qIXb2N7iYb8\n\n_‚ùóÔ∏è If you have any issues with the setup, please reach out, I'm trying to make this tool as accessible as possible, and didn't test thoroughly yet on all different environments‚ùóÔ∏è_\n\n# Prompting\n\nYou can create a new prompt with \"Free-form prompt\" or you can just use a pre-created prompt from the menu. You can base prompts on your selection, as well as the context of the file. Your choice!\n\n# Building your own products on top?\n\nBecause it's just an API, you can build things with ChatGPT with any techstack. However, I am opinionated, and I recommend Typescript (Node.js, Next.js, and React) because I built a way to build full stack apps with that super quickly (see [typerepo](https://typerepo.com)) and I've started with a course about it (see [codefromanywhere](https://codefromanywhere.com))\n\nTo get started with ChatGPT, there are many ways:\n\n- Use [chat.openai.com](https://chat.openai.com/) manually. Not recommended, it is painfully slow and often down\n- Use the reverse-engineered API you can find open source [on GitHub](https://github.com/acheong08/ChatGPT) (seems archived)\n- Use the browser-automation library you can find open source [on GitHub](https://github.com/transitive-bullshit/chatgpt-api)\n- Build your system against the headless GPT IDE API. See `headless-gpt-ide.md` for more details!\n\n```",
    "prompt_projectRelativePath": "operations/tools/ai/docs/gpt-ide/README.md",
    "thread": "7CCD7CAB6214F54F77203AE4AAD2E832",
    "contextualPromptSlug": "emoji-augmentation",
    "isFake": false,
    "isFavorite": true
  },
  {
    "createdAt": 1671502547256,
    "updatedAt": 1671502547256,
    "createdFirstAt": 1671502547256,
    "deletedAt": 0,
    "id": "hmvxgapazcsmnaytyqohhckw",
    "resultAssets": [],
    "resultText": "It seems like the file you are reading describes the set up instructions for a tool called GPT IDE, which is a web-based integrated development environment (IDE). The tool appears to require Chrome, Node.js, yarn, and git to be installed on your computer. The file also provides instructions for cloning the repository from GitHub, installing the necessary dependencies, and running the tool on your local machine. Once set up, the tool allows you to access your file system and work with files that have the extensions `json`, `ts`, `tsx`, and `md`. The file also mentions the option to create your own prompts or use pre-existing ones, as well as the ability to base prompts on your selection and the context of the file. It is recommended that you reach out to the creators of the tool if you have any issues with the setup.",
    "prompt": "I am reading this file:\n\n```\n# GPT IDE\n\nThe site you're seeing now can be transformed into an IDE if you connect it with an API that you can run locally. In order to do this, you can follow the below set up instructions. You don't need to be very technical for this, as long as you have a computer and know how to install some software, you should be fine!\n\n# Set up instructions\n\n## 1) Prerequisites\n\nYou need **Chrome** for this tool, please install chrome [here](https://www.google.com/chrome)\n\nYou need **Node.js** for this tool, ([windows](https://nodejs.org/en/download/), [MacOS, Linux](https://formulae.brew.sh/formula/node))\n\nYou need **`yarn`** for this tool, see installation instructions [here](https://classic.yarnpkg.com/lang/en/docs/install/#mac-stable)\n\nYou need **`git`** too! Installation instructions [here](https://git-scm.com/downloads)\n\nOther recommended devtools can be found [here](https://codefromanywhere.com/docs/course/getting-started/installation-instructions) (optional)\n\n## 2) Clone and open it in your code editor\n\nOpen a terminal, and clone the repo. You can use [VSCode](https://code.visualstudio.com/), or simply your terminal if you don't want to change anything.\n\n```\ngit clone https://github.com/CodeFromAnywhere/gptide\n```\n\n## 3) Install\n\n```\nyarn\n```\n\n## 4) Run\n\nIn the repo folder, run:\n\n```\nyarn dev\n```\n\nThis runs the server on `localhost:42000`. If you now go back to the site, you should be able to see your own file-system! If you don't, make sure you click \"API\" and ensure `http://localhost:42000` is filled in there. I've only tested on chrome, not sure if other browsers allow this http connection (you might get CORS error).\n\nAlternatively, you can also run the app in `[path-to-repo]/apps/generative-web` using `yarn dev` there. It's the same thing, just locally. You can also build it using `yarn build` and then run the prod version with `yarn start`.\n\nThe files are located in `/path/to/your/repo/docs` and you can put anything you want in there, but only `json`, `ts`, `tsx`, `md` extensions are supported, for now. If you don't know markdown, it might be useful to [read up](https://www.markdownguide.org/) on it.\n\nYou can now create your own prompts or try executing some of the pre-existing ones.\n\nhttps://www.youtube.com/watch?v=qIXb2N7iYb8\n\n_‚ùóÔ∏è If you have any issues with the setup, please reach out, I'm trying to make this tool as accessible as possible, and didn't test thoroughly yet on all different environments‚ùóÔ∏è_\n\n# Prompting\n\nYou can create a new prompt with \"Free-form prompt\" or you can just use a pre-created prompt from the menu. You can base prompts on your selection, as well as the context of the file. Your choice!\n\n```\n\nHow would you pitch this to an investor?",
    "prompt_projectRelativePath": "operations/tools/ai/docs/gpt-ide/README.md",
    "thread": "C783761A2E40B237FCE8FB77ADDEACB9",
    "contextualPromptSlug": "investor-pitch",
    "isFake": false
  },
  {
    "createdAt": 1672061247626,
    "updatedAt": 1672061247626,
    "createdFirstAt": 1672061247626,
    "deletedAt": 0,
    "id": "bgggsphmlexrvszakyrgrcnt",
    "resultAssets": [],
    "resultText": "To replace every word in the file with an UTF-8 emoji that reflects that word the most, you can follow these steps:\n\n1. First, you will need to create a dictionary that maps words to their corresponding UTF-8 emoji. You can do this manually by looking up the emoji for each word and adding it to the dictionary.\n\n2. Once you have your dictionary, you can iterate over each word in the file and use the dictionary to look up the corresponding emoji for each word.\n\n3. As you iterate over the words, you can build up a new string that consists of the emojis for each word, separated by spaces.\n\n4. When you have finished iterating over the words, you can return the new string as the contents of the modified file.\n\nHere is some example code that demonstrates how this could be implemented in Python:\n\n```python\nCopy codedef replace_words_with_emojis(file_contents):\n  # Create a dictionary that maps words to their corresponding emojis\n  word_to_emoji = {\n    \"GPT\": \"ü§ñ\",\n    \"IDE\": \"üíª\",\n    \"API\": \"üîå\",\n    \"Node.js\": \"‚öôÔ∏è\",\n    \"yarn\": \"üß∂\",\n    \"git\": \"üßπ\",\n    \"VSCode\": \"üöÄ\",\n    \"markdown\": \"üìù\",\n    \"prompt\": \"üí¨\"\n  }\n\n  # Split the file contents into a list of words\n  words = file_contents.split()\n\n  # Iterate over the words and replace each one with its corresponding emoji\n  emojis = []\n  for word in words:\n    if word in word_to_emoji:\n      emoji = word_to_emoji[word]\n    else:\n      emoji = word\n    emojis.append(emoji)\n\n  # Join the emojis into a single string and return it as the modified file contents\n  return \" \".join(emojis)\n```\n\nYou can then use this function like this:\n\n```scss\nCopy codemodified_file_contents = replace_words_with_emojis(file_contents)\n```\n\nI hope this helps! Let me know if you have any questions or if you need further assistance.",
    "prompt": "I am reading this file:\n\n```\n# GPT IDE\n\nThe site you're seeing now can be transformed into an IDE if you connect it with an API that you can run locally. In order to do this, you can follow the below set up instructions. You don't need to be very technical for this, as long as you have a computer and know how to install some software, you should be fine!\n\n# Set up instructions\n\n## 1) Prerequisites\n\nYou need **Chrome** for this tool, please install chrome [here](https://www.google.com/chrome)\n\nYou need **Node.js** for this tool, ([windows](https://nodejs.org/en/download/), [MacOS, Linux](https://formulae.brew.sh/formula/node))\n\nYou need **`yarn`** for this tool, see installation instructions [here](https://classic.yarnpkg.com/lang/en/docs/install/#mac-stable)\n\nYou need **`git`** too! Installation instructions [here](https://git-scm.com/downloads)\n\nOther recommended devtools can be found [here](https://codefromanywhere.com/docs/course/getting-started/installation-instructions) (optional)\n\n## 2) Clone and open it in your code editor\n\nOpen a terminal, and clone the repo. You can use [VSCode](https://code.visualstudio.com/), or simply your terminal if you don't want to change anything.\n\n```\ngit clone https://github.com/CodeFromAnywhere/gptide\n```\n\n## 3) Install\n\n```\nyarn\n```\n\n## 4) Run\n\nIn the repo folder, run:\n\n```\nyarn dev\n```\n\nThis runs the server on `localhost:42000`. If you now go back to the site, you should be able to see your own file-system! If you don't, make sure you click \"API\" and ensure `http://localhost:42000` is filled in there. I've only tested on chrome, not sure if other browsers allow this http connection (you might get CORS error).\n\nAlternatively, you can also run the app in `[path-to-repo]/apps/generative-web` using `yarn dev` there. It's the same thing, just locally. You can also build it using `yarn build` and then run the prod version with `yarn start`.\n\nThe files are located in `/path/to/your/repo/docs` and you can put anything you want in there, but only `json`, `ts`, `tsx`, `md` extensions are supported, for now. If you don't know markdown, it might be useful to [read up](https://www.markdownguide.org/) on it.\n\nYou can now create your own prompts or try executing some of the pre-existing ones.\n\nhttps://www.youtube.com/watch?v=qIXb2N7iYb8\n\n_‚ùóÔ∏è If you have any issues with the setup, please reach out, I'm trying to make this tool as accessible as possible, and didn't test thoroughly yet on all different environments‚ùóÔ∏è_\n\n# Prompting\n\nYou can create a new prompt with \"Free-form prompt\" or you can just use a pre-created prompt from the menu. You can base prompts on your selection, as well as the context of the file. Your choice!\n\n\n```\n\nReplace every word in the whole file with an utf8 emoji that reflects that word the most, and return the new file contents.",
    "prompt_projectRelativePath": "operations/tools/ai/docs/gpt-ide/README.md",
    "thread": "1CD980DF075493D7D5D7819C5DC773D2",
    "contextualPromptSlug": "add-emoji-to-every-word",
    "isFake": false
  },
  {
    "createdAt": 1672061295241,
    "updatedAt": 1672061295241,
    "createdFirstAt": 1672061295241,
    "deletedAt": 0,
    "id": "gqdfktcpmlkdqgoagnmjaehy",
    "resultAssets": [],
    "resultText": "To replace every word in the file with an emoji that reflects that word the most, you can follow these steps:\n\n1. First, you'll need to read in the contents of the file. You can do this using the `open` function in Python or the `fs` module in Node.js.\n\n2. Next, you'll need to split the file contents into individual words. You can do this by using the `split` function in Python or the `split` method in JavaScript.\n\n3. Once you have a list of words, you can iterate over each word and replace it with the corresponding emoji using a dictionary or a mapping function.\n\n4. Finally, you can join the modified list of words back into a single string and write it back to the file using the `write` function in Python or the `fs` module in Node.js.\n\nHere is some example code in Python that demonstrates how you can accomplish this task:\n\n```python\nCopy codeimport emoji\n\ndef replace_words_with_emojis(file_path):\n  # Read in the contents of the file\n  with open(file_path, 'r') as file:\n    contents = file.read()\n\n  # Split the contents into a list of words\n  words = contents.split()\n\n  # Replace each word with the corresponding emoji\n  emojified_words = [emoji.emojize(word) for word in words]\n\n  # Join the list of emojified words back into a single string\n  emojified_contents = \" \".join(emojified_words)\n\n  # Write the emojified contents back to the file\n  with open(file_path, 'w') as file:\n    file.write(emojified_contents)\n\n# Replace the words in the file with emojis\nreplace_words_with_emojis('path/to/file.txt')\n```\n\nI hope this helps! Let me know if you have any questions or if you'd like more guidance on how to implement this.",
    "prompt": "I am reading this file:\n\n```\n# GPT IDE\n\nThe site you're seeing now can be transformed into an IDE if you connect it with an API that you can run locally. In order to do this, you can follow the below set up instructions. You don't need to be very technical for this, as long as you have a computer and know how to install some software, you should be fine!\n\n# Set up instructions\n\n## 1) Prerequisites\n\nYou need **Chrome** for this tool, please install chrome [here](https://www.google.com/chrome)\n\nYou need **Node.js** for this tool, ([windows](https://nodejs.org/en/download/), [MacOS, Linux](https://formulae.brew.sh/formula/node))\n\nYou need **`yarn`** for this tool, see installation instructions [here](https://classic.yarnpkg.com/lang/en/docs/install/#mac-stable)\n\nYou need **`git`** too! Installation instructions [here](https://git-scm.com/downloads)\n\nOther recommended devtools can be found [here](https://codefromanywhere.com/docs/course/getting-started/installation-instructions) (optional)\n\n## 2) Clone and open it in your code editor\n\nOpen a terminal, and clone the repo. You can use [VSCode](https://code.visualstudio.com/), or simply your terminal if you don't want to change anything.\n\n```\ngit clone https://github.com/CodeFromAnywhere/gptide\n```\n\n## 3) Install\n\n```\nyarn\n```\n\n## 4) Run\n\nIn the repo folder, run:\n\n```\nyarn dev\n```\n\nThis runs the server on `localhost:42000`. If you now go back to the site, you should be able to see your own file-system! If you don't, make sure you click \"API\" and ensure `http://localhost:42000` is filled in there. I've only tested on chrome, not sure if other browsers allow this http connection (you might get CORS error).\n\nAlternatively, you can also run the app in `[path-to-repo]/apps/generative-web` using `yarn dev` there. It's the same thing, just locally. You can also build it using `yarn build` and then run the prod version with `yarn start`.\n\nThe files are located in `/path/to/your/repo/docs` and you can put anything you want in there, but only `json`, `ts`, `tsx`, `md` extensions are supported, for now. If you don't know markdown, it might be useful to [read up](https://www.markdownguide.org/) on it.\n\nYou can now create your own prompts or try executing some of the pre-existing ones.\n\nhttps://www.youtube.com/watch?v=qIXb2N7iYb8\n\n_‚ùóÔ∏è If you have any issues with the setup, please reach out, I'm trying to make this tool as accessible as possible, and didn't test thoroughly yet on all different environments‚ùóÔ∏è_\n\n# Prompting\n\nYou can create a new prompt with \"Free-form prompt\" or you can just use a pre-created prompt from the menu. You can base prompts on your selection, as well as the context of the file. Your choice!\n\n\n```\n\nReplace every word in the whole file with an utf8 emoji that reflects that word the most, and return the new file contents.",
    "prompt_projectRelativePath": "operations/tools/ai/docs/gpt-ide/README.md",
    "thread": "040BF1A61A24CC6A4E2E8967D3C2F751",
    "contextualPromptSlug": "add-emoji-to-every-word",
    "isFake": false
  }
]