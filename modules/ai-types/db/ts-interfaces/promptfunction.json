{
  "createdAt": 1671553208468,
  "updatedAt": 1671553208468,
  "deletedAt": 0,
  "createdFirstAt": 1671553208468,
  "id": "promptfunction",
  "name": "PromptFunction",
  "slug": "promptfunction",
  "operationRelativeTypescriptFilePath": "src/PromptFunction.ts",
  "hasGeneric": false,
  "isExported": true,
  "rawText": "\n/**\n * Special kind of function that executes a prompt with the use of a language model\n */\nexport type PromptFunction = {\n  (...parameters: any[]): Promise<ProcessPromptFunctionResult>;\n  contextualPromptInfo: ContextualPromptInfo;\n} & ApiFunctionParameters;",
  "extensions": [],
  "isOperationIndex": false,
  "description": "Special kind of function that executes a prompt with the use of a language model",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "isPublic": {
          "type": "boolean"
        },
        "domain": {
          "type": "string",
          "description": "If it's a slug without TLD, the function will be on on a landing page without its own domain If it's a slug with TLD, it can get it's own domain If domain is given, function is wrapped into `sdk-public-tools`, wrapped with:\n\n- providing email and other required credentials\n- adding to queue if server is busy\n\nLater I can wrap this even more with monetisation and 'tool-owner', so I can let others do the same with a single click (promote after form is filled is like \"learn more about how to earn money with the new AI tech revolution (or so)\")"
        },
        "isPaid": {
          "type": [
            "boolean",
            "string"
          ],
          "enum": [
            true,
            "isSuccessful"
          ],
          "description": "- If true, usage will be counted in `UsageReport`\n- If \"isSuccessful\", usage will be counted only if this function returns `.isSuccessful: true`\n\nNB: not sure if the latter is needed"
        },
        "price": {
          "type": "number",
          "description": "Cost per execution in EURO CENT\n\ne.g. 0.05 means that 2000 executions cost 1 euro."
        },
        "allowedRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contextualPromptInfo": {
          "$ref": "#/definitions/ContextualPromptInfo"
        }
      },
      "required": [
        "contextualPromptInfo"
      ],
      "description": "Special kind of function that executes a prompt with the use of a language model"
    },
    "simplifiedSchema": {
      "fullComment": "Special kind of function that executes a prompt with the use of a language model",
      "properties": [
        {
          "name": "isPublic",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "domain",
          "required": false,
          "schema": {
            "fullComment": "If it's a slug without TLD, the function will be on on a landing page without its own domain If it's a slug with TLD, it can get it's own domain If domain is given, function is wrapped into `sdk-public-tools`, wrapped with:\n\n- providing email and other required credentials\n- adding to queue if server is busy\n\nLater I can wrap this even more with monetisation and 'tool-owner', so I can let others do the same with a single click (promote after form is filled is like \"learn more about how to earn money with the new AI tech revolution (or so)\")",
            "type": "string"
          }
        },
        {
          "name": "isPaid",
          "required": false,
          "schema": {
            "enum": [
              true,
              "isSuccessful"
            ],
            "fullComment": "- If true, usage will be counted in `UsageReport`\n- If \"isSuccessful\", usage will be counted only if this function returns `.isSuccessful: true`\n\nNB: not sure if the latter is needed",
            "nb": "not sure if the latter is needed",
            "type": "boolean"
          }
        },
        {
          "name": "price",
          "required": false,
          "schema": {
            "fullComment": "Cost per execution in EURO CENT\n\ne.g. 0.05 means that 2000 executions cost 1 euro.",
            "type": "number"
          }
        },
        {
          "name": "allowedRoles",
          "required": false,
          "schema": {
            "items": [
              {
                "schema": {
                  "type": "string"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        },
        {
          "name": "contextualPromptInfo",
          "required": true,
          "schema": {
            "fullComment": "To be appended to the generated typescript",
            "properties": [
              {
                "name": "contextType",
                "required": false,
                "schema": {
                  "fullComment": "If given, will be used to filter the selection of prompts to match the context type",
                  "items": [
                    {
                      "schema": {
                        "enum": [
                          "code",
                          "data",
                          "text"
                        ],
                        "fullComment": "",
                        "type": "string"
                      },
                      "name": "FileType"
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "instantExecution",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "isFavorite",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "categoryStack",
                "required": false,
                "schema": {
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "pricing",
                "required": false,
                "schema": {
                  "enum": [
                    "bad",
                    "good",
                    "premium",
                    "enterprise",
                    "private"
                  ],
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "PromptFunction",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}